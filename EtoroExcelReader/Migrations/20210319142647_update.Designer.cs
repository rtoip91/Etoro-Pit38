// <auto-generated />
using System;
using EtoroExcelReader.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EtoroExcelReader.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210319142647_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("EtoroExcelReader.Entities.ClosedPositionEntity", b =>
                {
                    b.Property<int?>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ClosingRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<string>("CopiedInvestor")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FeesAndDividends")
                        .HasColumnType("TEXT");

                    b.Property<string>("IsReal")
                        .HasColumnType("TEXT");

                    b.Property<int>("Leverage")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OpeningRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operation")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Profit")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Spread")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("StopLossRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TakeProfitRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Units")
                        .HasColumnType("TEXT");

                    b.HasKey("PositionId");

                    b.ToTable("ClosedPositions");
                });

            modelBuilder.Entity("EtoroExcelReader.Entities.ExchangeRateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("EtoroExcelReader.Entities.TransactionReportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<int>("NWA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PositionId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RealizedEquity")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RealizedEquityChange")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("TransactionReports");
                });

            modelBuilder.Entity("EtoroExcelReader.Entities.TransactionReportEntity", b =>
                {
                    b.HasOne("EtoroExcelReader.Entities.ClosedPositionEntity", "ClosedPosition")
                        .WithMany("TransactionReports")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClosedPosition");
                });

            modelBuilder.Entity("EtoroExcelReader.Entities.ClosedPositionEntity", b =>
                {
                    b.Navigation("TransactionReports");
                });
#pragma warning restore 612, 618
        }
    }
}
